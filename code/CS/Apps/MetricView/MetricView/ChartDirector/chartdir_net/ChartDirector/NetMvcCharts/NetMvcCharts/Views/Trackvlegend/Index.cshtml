@{ Layout = null; }

<!DOCTYPE html>
<html>
<head>
    <title>Track Line with Vertical Legend</title>
    @Scripts.Render("~/Scripts/cdjcv.js")
    <style>
    .legend {border:solid 1px #888888; black;background:#eeeeee; font:13px Arial; padding:2px;
             border-radius:4px; white-space:nowrap;-webkit-text-size-adjust:100%;}
    .legend_caption {text-decoration:underline; font-weight:bold; padding-bottom:2px;}
    .legend_table {border-spacing:0px;}
    .legend_table td {padding:1px 0px 1px 3px;}
    .legend_slide  {-webkit-transition:left 0.3s;}
    </style>
</head>
<body style="margin:5px 0px 0px 5px">
<script type="text/javascript">

//
// Use the window load event to set up the MouseMovePlotArea event handler
//
JsChartViewer.addEventListener(window, 'load', function() {
    var viewer = JsChartViewer.get('@ViewBag.Viewer.ID');

    // Draw track cursor when mouse is moving over plotarea. Hide it when mouse leaves plot area.
    viewer.attachHandler(["MouseMovePlotArea", "TouchStartPlotArea", "TouchMovePlotArea", "ChartMove"],
    function(e) {
        this.preventDefault(e);   // Prevent the browser from using touch events for other actions
        trackVLegend(viewer, viewer.getPlotAreaMouseX());
        viewer.setAutoHide("all", ["MouseOutPlotArea", "TouchEndPlotArea"]);
    });
});

//
// Draw track line with axis labels
//
function trackVLegend(viewer, mouseX)
{
    // Remember whether we are displaying the legend initially or updating the display.
    var legendIsVisible = viewer.isVisible("legend");

    // Remove all previously drawn tracking object
    viewer.hideObj("all");

    // The chart and its plot area
    var c = viewer.getChart();
    var plotArea = c.getPlotArea();

    // Get the data x-value that is nearest to the mouse, and find its pixel coordinate.
    var xValue = c.getNearestXValue(mouseX);
    var xCoor = c.getXCoor(xValue);

    // Draw a vertical track line at the x-position
    viewer.drawVLine("trackLine", xCoor, plotArea.getTopY(), plotArea.getBottomY(), "black 1px dotted");

    // Array to hold the legend entries
    var legendEntries = [];

    // Iterate through all layers to draw the axis labels for the data points
    for (var i = 0; i < c.getLayerCount(); ++i)
    {
      var layer = c.getLayerByZ(i);

        // The data array index of the x-value
        var xIndex = layer.getXIndexOf(xValue);

        // Iterate through all the data sets in the layer
        for (var j = 0; j < layer.getDataSetCount(); ++j)
        {
            var dataSet = layer.getDataSetByZ(j);

            // Only visible data sets with names are included in the legend.
            var dataName = dataSet.getDataName();
            var color = dataSet.getDataColor();
            var dataValue = dataSet.getValue(xIndex);
            if ((!dataName) || (color == null) || (dataValue == null))
                continue;

            // Build the legend entry, consist of a colored square box, the name and the data value.
            legendEntries.push("<tr><td>" + viewer.htmlRect(7, 7, color, "black 1px solid") + " " +
                dataSet.getDataName() + ":</td><td>" + dataValue.toPrecision(4) + "</td></tr>");

            // Draw a track dot for data points within the plot area
            var yCoor = c.getYCoor(dataSet.getPosition(xIndex));
            if ((yCoor != null) && (yCoor >= plotArea.getTopY()) && (yCoor <= plotArea.getBottomY()))
            {
                   viewer.showTextBox("dataPoint" + i + "_" + j, xCoor, yCoor, JsChartViewer.Center,
                       viewer.htmlRect(7, 7, color, "black 1px solid"));
            }
        }
    }

    if (legendEntries.length > 0)
    {
        // Create the legend by joining the legend entries
        var legend = "<div class='legend_caption'>" + c.xAxis().getFormattedLabel(xValue, "yyyy-mm-dd")
            + "</div><table class='legend_table'>" + legendEntries.reverse().join("") + "</table>";

        // Put the legend box at the opposite side of the mouse
        var mouseOnRight = xCoor >= (plotArea.getLeftX() + plotArea.getRightX()) / 2;
        var legendX = mouseOnRight ? (plotArea.getLeftX() + 1) : (plotArea.getRightX() - 1);
        var alignment = mouseOnRight ? JsChartViewer.TopLeft : JsChartViewer.TopRight;

        var legendStyle = "class:legend" + (legendIsVisible ? " legend_slide" : "") + ";";
        var legendBox = viewer.showClickableTextBox("legend", legendX, plotArea.getTopY(),
            alignment, legend, legendStyle);
    }
}

</script>
<div style="font-size:18pt; font-family:verdana; font-weight:bold">
    Track Line with Vertical Legend
</div>
<hr style="border:solid 1px #000080" />
<!-- ****** Here is the chart viewer ****** -->
@Html.Raw(ViewBag.Viewer.RenderHTML())
</body>
</html>
