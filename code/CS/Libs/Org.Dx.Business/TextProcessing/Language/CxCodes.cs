using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Org.Dx.Business;
using Org.GS;

namespace Org.Dx.Business.TextProcessing
{
  public class CxCode
  {
    public static Dictionary<int, string> CxCodesAndMessages = new Dictionary<int,string>()
    {
      { 0001, "CX0001 - Compiliation of Cmd object in Cmdx constructor failed - Cmd object is null." },
      { 0002, "CX0002 - An exception occurred during the compilation of a Cmd object." },
      { 0003, "CX0003 - CmdxFactory was not able to create a Cmdx object because the Cmd object provided is null." },
      { 0004, "CX0004 - An undefined verb was encountered in the CmdxFactory." },
      { 0005, "CX0005 - An exception occurred in the PopulateParms method of the Cmdx object." },
      { 0006, "CX0006 - An exception occurred in the Get_Verb method of the Cmdx object." },
      { 0007, "CX0007 - An invalid verb was found in the Cmdx object." },
      { 0008, "CX0008 - No data name value was found in the Cmdx object." },
      { 0009, "CX0009 - An exception occurred in the Get_DataName method of the Cmdx object." },
      { 0010, "CX0010 - An exception occurred in the Get_DataType method of the Cmdx object." },
      { 0011, "CX0011 - An exception occurred in the Get_DataFormat method of the Cmdx object." },
      { 0012, "CX0012 - An exception occurred in the Get_StoredTokenIndex method of the Cmdx object." },
      { 0013, "CX0013 - An exception occurred in the Get_TokenType method of the Cmdx object." },
      { 0014, "CX0014 - An exception occurred in the Get_SubCommand method of the Cmdx object." },
      { 0015, "CX0015 - The number of parameters is less than the number required." },
      { 0016, "CX0016 - The Get_TokenType method of Cmdx found an open bracket, but no token type was found." },
      { 0017, "CX0017 - The Cmdx SubCommand is invalid." },
      { 0018, "CX0018 - The Cmdx Verb is invalid." },
      { 0019, "CX0019 - Message not defined." },
      { 0020, "CX0020 - An exception occurred in the Get_TextParmValue method of the Cmdx object." },
      { 0021, "CX0021 - An invalid parameter was found in the GetStoredTokenIndex method of the Cmdx object." },
      { 0022, "CX0022 - An invalid data format was found in the AssertValidDataFormat extension method of the Cmdx object." },
      { 0023, "CX0023 - An exception occurred in the ExtractNextToken extension method of the Cmdx object." },
      { 0024, "CX0024 - The data type failed assertion of validity." },
      { 0025, "CX0025 - The token found is not of the specified token type (data type)." },
      { 0026, "CX0026 - The stored token index provided in the Cmdx object is invalid (less than zero)." },
      { 0027, "CX0027 - The Tokens collection of the text object is null, no tokens can be extracted  and the data is required." },
      { 0028, "CX0028 - The stored token index is beyond the end of the Tokens array and the data is required." },
      { 0029, "CX0029 - The extracted token is not of the requested token type." },
      { 0030, "CX0030 - Malformed requiredIf parameter - no closing bracket found on condition." },
      { 0031, "CX0031 - No condition was found between the brackets in the requiredIf parmeter." },
      { 0032, "CX0032 - Malformed sr (special routine) parameter - no closing bracket found on condition." },
      { 0033, "CX0033 - No special routine name was found between the brackets in the sr parmeter." },
      { 0034, "CX0034 - No closing parenthesis was found in the data after finding an open parenthesis while running special routine SignedParen1." },
      { 0035, "CX0035 - The length of the token found between the parenthesis was greather than  maximum of 15 characters while running special routine SignedParen1.." },
      { 0036, "CX0036 - The token found between the parenthesis was required but blank while running special routine SignedParen1." },
      { 0037, "CX0037 - An unidentified special routine name was found." },
      { 0038, "CX0038 - A second open parenthesis was found before a close parenthesis when tokenizing a line using special routine signedParen1." },
      { 0039, "CX0039 - A close parenthesis was found before a open parenthesis when tokenizing a line using special routine signedParen1." },
      { 0040, "CX0040 - An exception occurred while attempting to tokenize the next line." },
      { 0041, "CX0041 - An exception occurred in the FormatValue text extension method while attempting to format an extracted value." },
      { 0042, "CX0042 - An error occurred in the FormatValue text extension method - the combination of extract value type and the specified format is not yet implemented." },
      { 0043, "CX0043 - An exception occurred in the GetTypePlaceholders text extension method." },
      { 0044, "CX0044 - An exception occurred in the FindString text extension method." },
      { 0045, "CX0045 - An invalid sub-command was found in the SetVariable extension method." },
      { 0046, "CX0046 - An exception occurred in the SetVariable text extension method." },
      { 0047, "CX0047 - An undefined placeholder type was found in the IsTokenType text extension method." },
      { 0048, "CX0048 - An error occurred in the Get_PriorEndPosition property-populating method - the TextSet object is null." },
      { 0049, "CX0049 - An error occurred in the Get_PriorEndPosition property-populating method - the TextSet object is empty." },
      { 0050, "CX0050 - An exception occurred in the ProcessStructureDefinition method of the Text object." },
      { 0051, "CX0051 - The name provided for a Text object already exists in the parent Text object's TextSet." },
      { 0052, "CX0052 - An exception occurred in the CreateStructure method of the Text object." },
      { 0053, "CX0053 - An exception occurred in the ExtractData method (with no parameters) of the Text object." },
      { 0054, "CX0054 - An exception occurred in the ExtractData method (recursive/parameterized) of the Text object." },
      { 0055, "CX0055 - An error occurred in the ExtractData method (recursive/parameterized) of the Text object - xml attribute already exists." },
      { 0056, "CX0056 - An exception occurred in the GetToken method (which specifies the starting position and length) of the Text object." },
      { 0057, "CX0057 - The raw text property is shorter than the begin position plus length and truncation (which must be explicityly allowed is not allowed." },
      { 0058, "CX0058 - The raw text proprety is shorter than the begin position and truncation (which must be explicitly allowed is not allowed." },
      { 0059, "CX0059 - An exception occurred in the GetToken method (which specifies the starting position) of the Text object." },
      { 0060, "CX0060 - The SetVariable or SetGlobalVariable verb when using the 'find' sub-command requires a specified value to find." },
      { 0061, "CX0061 - An exception occurred in the FindTextPosition text extension method." },
      { 0062, "CX0062 - An exception occurred in the FindTextPosition text extension method that takes a CmdxData object as its only parameter." },
      { 0063, "CX0063 - In the 'SetVariable' command the data name is blank or null." },
      { 0064, "CX0064 - In the 'SetVariable' command the sub-command is blank or null." },
      { 0065, "CX0065 - In the 'SetVariable' command data name already exists as a variable in the Text objects local variables collection." },
      { 0066, "CX0066 - An exception occurred in the ExtractTextBefore text extension method." },
      { 0067, "CX0067 - The text parm value (index 1) is required for 'ExtractTextBefore' verb but it is blank or null." },
      { 0068, "CX0068 - The token being extracted is blank but it is required." },
      { 0069, "CX0069 - The required text before which the target text is to be extracted was not found in the 'ExtractTextBefore' text extension method." },
      { 0070, "CX0070 - The text extracted in the ExtractNextTokens method is blank but is required." },
      { 0071, "CX0071 - An exception occurred in the ExtractNextTokens text extension method." },
      { 0072, "CX0072 - The number of tokens parameter (index 1) is not numeric." },
      { 0073, "CX0073 - The number of tokens parameter (index 1) is less than 1." },
      { 0074, "CX0074 - The required number of tokens was not found in the ExtractNextTokens text extension method." },
      { 0075, "CX0075 - The stored token index plus the number of tokens to extract extends beyond the end of the Tokens array in the Text object." },
      { 0076, "CX0076 - The extracted tokens (combined) are not of the requested token type." },
      { 0077, "CX0077 - The count of tokens to be extracted (stored token count) is not supplied in the command - too few parameters." },
      { 0078, "CX0078 - The number of tokens specified for extraction is less than 1 in text extension method ExtractStoredTokens." },
      { 0079, "CX0079 - An exception occurred in the Get_TokensToRemove property populator method in the Cmdx object." },
      { 0080, "CX0080 - The parms collection of the Cmdx object is null or empty but is required for the verb 'RemoveTokens'." },
      { 0081, "CX0081 - A token specified for removal in the RemoveTokens command is invalid - found an open bracket '[', but no value between the brackets." },
      { 0082, "CX0082 - The token specified for removal in the RemoveToken command is blank or null." },
      { 0083, "CX0083 - An exception occurred in the ExtractNextToken extension method of the Cmdx object." },
      { 0084, "CX0084 - The token specified to be removed in the Text.RemoveTokens method was not found and was required to be found and removed." },
      { 0085, "CX0085 - The first parameter of the Truncate command must be either 'before' or 'after' - a different value was found." },
      { 0086, "CX0086 - An exception occurred in the Get_Direction property populator method in the Cmdx object." },
      { 0087, "CX0087 - The CreateElement command requires a valid element name to be supplied in the first parameter." },
      { 0088, "CX0088 - An exception occurred in the CreateElement text extension method." },
      { 0089, "CX0089 - An exception occurred in the ExtractNextLine text extension method." },
      { 0090, "CX0090 - The CreateElement command has a second parameter which is used to specify attributes that does not contain brackets []." },
      { 0091, "CX0091 - The CreateElement command has a second parameter which is used to specify attributes that has no value between the brackets." },
      { 0092, "CX0092 - The CreateElement command has a second parameter which is used to specify attributes that has an equals sign but doesn't have tokens on both sides." },
      { 0093, "CX0093 - The CreateElement command has a second parameter which is used to specify attributes that contains a blank in an attribute name." },
      { 0094, "CX0094 - The CreateElement command has a second parameter which is used to specify attributes that contains a duplicated attribute name." },
      { 0095, "CX0095 - The required text was not found." },
      { 0096, "CX0096 - The required number of tokens does not equal the actual number of tokens found when tokenizing a line of text." },
      { 0097, "CX0097 - An exception occurred while attempting to create a new DxCell and add it to the worksheet." },
      { 0098, "CX0098 - Cannot resolve a blank or null key in ColumnIndexMap." },
      { 0099, "CX0099 - All ColumnIndexMap keys must have an entity and column node (i.e. 'Entity.Column')." },
      { 0100, "CX0100 - The entity name referred to in the first node of the key does not exist in the ColumnIndexMap." },
      { 0101, "CX0101 - The column name referred to in the second node of the key does not exist in the ColumnIndexMap." },
      { 0102, "CX0102 - An exception occurred in the ExtractPriorTokenOfType extension method of the Text object." },
      { 0103, "CX0103 - The adjusted beginning position for locating the end of the text structure is less than 0." },
      { 0104, "CX0104 - The adjusted beginning position for locating the end of the text structure is greater than the length of the raw text." },
      { 0105, "CX0105 - An exception occurred in the ExtractPriorTokensOfType extentsion method of the Text object." },
      { 0106, "CX0106 - The number of tokens must match the number of token types specified in the ExtractPriorTokensOfType extension method." },
      { 0107, "CX0107 - An exception occurred in the ExtractToken extension method of the Text object." },
      { 0108, "CX0108 - The required variable was not found in either the local or global variables collections." },
      { 0109, "CX0109 - The variable value to be used to locate text is blank and thus cannot be used to locate text." },
      { 0110, "CX0110 - An exception occurred while attempting to process a SetTextPosition command." },
      { 0111, "CX0111 - The SetTextPosition command requires four positional parameters (Direction, number, TextUnit, PositionAt) but less than three parameters were found." },
      { 0112, "CX0112 - The first parameter (Direction) of the SetTextPosition command must be either 'back' or 'next' - a different value was found." },
      { 0113, "CX0113 - An exception occurred while attempting to get the UnitCount from the Cmdx object." },
      { 0114, "CX0114 - An exception occurred while attempting to get the TextUnit from the Cmdx object.." },
      { 0115, "CX0115 - The UnitCount property is currently only implemented for the SetTextPosition verb." },
      { 0116, "CX0116 - The TextUnit property is currently only implemented for the SetTextPosition verb." },
      { 0117, "CX0117 - The second parameter (UnitCount) of the SetTextPosition command must be an integer - a non-integral value was found." },
      { 0118, "CX0118 - The third parameter (TextUnit) must be 'character', 'token' or 'line' - a different value was found." },
      { 0119, "CX0119 - An exception occurred while attempting to create a TokenSearchCriteria object from the Cmdx object." },
      { 0120, "CX0120 - The fourth parameter (PositionAt) must be 'start', 'end', 'before' or 'after' - a different value was found." },
      { 0121, "CX0121 - An exception occurred while attempting to process the command ExtractNextTokenOfType." },
      { 0122, "CX0122 - An exception occurred while attempting to get the Pattern property of the Cmdx object." },
      { 0123, "CX0123 - A required token was not located." },
      { 0124, "CX0124 - An exception occurred while attempting to run a special routine for text structure definition (Tsd.SpecialRoutine)." },
      { 0125, "CX0125 - An exception occurred while attempting to run the Tsd special routine named 'EnableGasGrid1'." },
      { 0126, "CX0126 - Tsd SpecialRoutine coding begun but not completed." },
      { 0127, "CX0127 - An exception occurred while attempting to get the HelperFunction parameter from the Cmdx object." },
      { 0128, "CX0128 - An exception occurred while attempting to run the Cmdx.RunHelperFunction method." },
      { 0129, "CX0129 - An exception occurred while attempting to get the MinimumTokens parameter from the Cmdx object." },
      { 0130, "CX0130 - In invalid value (not numeric) was encountered while attempting to return the MinimumTokens (minTokens) paramater from the Cmdx object." },
      { 0131, "CX0131 - No value was supplied as a literal token value to be extracted." },
      { 0132, "CX0132 - A stored token was required but the Text.Tokens collection is null or empty." },
      { 0133, "CX0133 - The requested stored token index is behond the end of the Text.Tokens array." },
      { 0134, "CX0134 - The requested stored token is blank." },
      { 0135, "CX0135 - No integer value as supplied as the number of months parameter for the 'addMonth' helper function." },
      { 0136, "CX0136 - No value matched the pattern and a value was required." },
      { 0137, "CX0137 - The value of the joined stored tokens is blank and a value is required." },
      { 0138, "CX0138 - An exception occurred while attempting to get the Range property of the Cmdx object." },
      { 0139, "CX0139 - The Cmdx 'BeforeToken' parameter is invalid - it contains a forward slash but it does not delimit exactly two sub-tokens." },
      { 0140, "CX0140 - An exception occurred while attempting to get the 'join' parameter from the Cmdx object." },
      { 0141, "CX0141 - An exception occurred while attempting to get the 'before' (BeforeToken) parameter from the Cmdx object." },
      { 0142, "CX0142 - An invalid data type was specified as part of the 'BeforeToken' parameter of the Cmdx object - only 'int' is implemented currently." },
      { 0143, "CX0143 - The 'BeforeToken' parameters was specified on the Cmdx object, but the Tokens collection of the Text object is null or empty." },
      { 0144, "CX0144 - The Token array of the Text object is null or empty and thus the StoredToken index determined cannot be located." },
      { 0145, "CX0145 - A non-blank result is required but the ExtractToken method result is blank." },
      { 0146, "CX0146 - The sub-parameter type specified in the 'BeforeToken' parameters is invalid only the 'l' parameter (specifying length) is implemented currently." },
      { 0147, "CX0147 - The minimum length sub-parameter of the 'l' specification of the 'BeforeToken' parameter is less than the specified maximum length sub-parameter." },
      { 0148, "CX0148 - The token specified as the 'target' of the 'BeforeToken' parameter was not found, but a extracted value is required." },
      { 0149, "CX0149 - The result of the ExtractToken method when joining of remaining stored parameters is blank but is required." },
      { 0150, "CX0150 - The single sub-parameter specified in the 'l' (length) specification of the 'BeforeToken' parameter is not numeric." },
      { 0151, "CX0151 - The number of sub-parameters specified in the 'l' (length) specification of the 'BeforeToken' parameter must be (but is not) 1 or 2." },
      { 0152, "CX0152 - The first of two sub-parameters specified in the 'l' (length) specification (the minimum length) of the 'BeforeToken' parameter is not numeric." },
      { 0153, "CX0153 - The second of two sub-parameters specified in the 'l' (length) specification (the maximum length) of the 'BeforeToken' parameter is not numeric." },
      { 0154, "CX0154 - The FindTextPosition extension method was not able to locate the position of the required token." },
      { 0155, "CX0155 - Cannot resolve more than 10 variables in a single block of text." },
      { 0156, "CX0156 - A condition expression must begin with 'cond='." },
      { 0157, "CX0157 - Message not defined." },
      { 0158, "CX0158 - Message not defined." },
      { 0159, "CX0159 - A non-blank result is required but the ExtractTextBefore method result is blank." },
      { 0160, "CX0160 - An exception occurred while executing the SetTsdCondition of the Cmdx object." },
      { 0161, "CX0161 - The SetTsdCondition command does not have any parameters." },
      { 0162, "CX0162 - The second parameter of the Tsd command must be equal to 'on' or 'off'." },
      { 0163, "CX0163 - Cannot execute SetTsdCondition command - Cmdx.Parent (Tsd object) is null." },
      { 0164, "CX0164 - An exception occurred in the ReplaceText extension method of the Text object." },
      { 0165, "CX0165 - The ReplaceText verb requires at least one parameter, the text to be replaced." },
      { 0166, "CX0166 - The first parameter of the ReplaceText verb (the text to be replaced) cannot be blank." },
      { 0167, "CX0167 - Greater than ten exceptions have occurred while processing text extraction." },
      { 0168, "CX0168 - Message not defined." },
      { 0169, "CX0169 - Message not defined." },
      { 0170, "CX0170 - Message not defined." },
      { 0171, "CX0171 - Message not defined." },
      { 0172, "CX0172 - Message not defined." },
      { 0173, "CX0173 - Message not defined." },
      { 0174, "CX0174 - Message not defined." },
      { 0175, "CX0175 - Message not defined." },
      { 0176, "CX0176 - Message not defined." },
      { 0177, "CX0177 - Message not defined." },
      { 0178, "CX0178 - Message not defined." },
      { 0179, "CX0179 - Message not defined." },
      { 0180, "CX0180 - Message not defined." },
      { 0181, "CX0181 - An exception occurred in the Truncate extension method of the Text object." },
      { 0182, "CX0182 - The Truncate verb requires exactly 3 parameters (start position, text to find, truncate direction)." },
      { 0183, "CX0183 - The first parameter for the Truncate verb must be a numeric start position or an asterisk indicating 'use current position'." },
      { 0184, "CX0184 - The TruncateDirection property is only valid on the Truncate verb." },
      { 0185, "CX0185 - The valid values for the 'TruncateDirection' parameter (third parameter for the Truncate verb) are 'before' and 'after'." },
      { 0186, "CX0186 - An exception occurred in the Get_TruncateDirection property population method." },
      { 0187, "CX0187 - Message not defined." },
      { 0188, "CX0188 - Message not defined." },
      { 0189, "CX0189 - Message not defined." },
      { 0190, "CX0190 - Message not defined." },
      { 9999, "CX9999 - Undefined message." }

    };

  }
}
